#!/usr/bin/env python3
#In this module there is stored the execution of the main function of the program, with its corresponding command line arguments..

from comparch.functions import main
import argparse


parser = argparse.ArgumentParser(description="""ComplexArchitect is a Python application designed to generate macrocomplex structures from simple pair inetractions PDB files.""")

parser.add_argument('-i', '--input',
                        dest = "input",
                        action = "store",
                        default = None,
                        help = "Input directory where PDB files with the pair interactions are located.")


parser.add_argument('-o', '--output',
                        dest = "output",
                        action = "store",
                        default = "complex",
                        help = "Name of the output file. No extension is needed.")


parser.add_argument('-fa', '--fasta',
                        dest = "fasta",
                        action = "store",
                        default = None,
                        help = """FASTA file with the sequences of the chains that will conform the macrocomplex. They have to correspond to the sequences
                                of the chains from the PDB files. The file should contain unique sequences; sequences don't need to be repeated.""")

parser.add_argument('-sto', '--stoichiometry',
                        dest = "stoichiometry",
                        action = "store",
                        default = None,
                        help = """Desired stoichiometry of the resulting complex. The format should be like the follow example: A:2,B:4,C:1 ...""")

parser.add_argument('-m', '--models',
                        dest = "model_num",
                        action = "store",
                        default = 1,
                        help = """Maximum number of models the program is going to build. The default number is 1.""")

parser.add_argument('-C', '--chains',
                        dest = "chains",
                        action = "store",
                        default = 100,
                        help = """Maximum number of chains that the resulting model complex is going to have. The default number is 100.""")

parser.add_argument('-clash', '--clashes',
                        dest = "clash_dist",
                        action = "store",
                        default = 2,
                        help = """Minimum clash distance between 2 atoms. The default minimum is 1.5 A.""")

parser.add_argument('-opt', '--optimize',
                        dest = "optimize",
                        action = "store_true",
                        default = False,
                        help = """Refines the resulting model complexes and creates a DOPE plot comparison between the unoptimized and the optimized model.""")

parser.add_argument('-v', '--verbose',
                        dest = "verbose",
                        action = "store_true",
                        default = False,
                        help = "Shows the progress of the program.")



options = parser.parse_args()

if __name__=="__main__":
    main(options.input, options.output, options.fasta, options.stoichiometry, options.model_num, options.chains, options. clash_dist, options.optimize, options.verbose)
